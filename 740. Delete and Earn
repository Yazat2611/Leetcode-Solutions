class Solution {
private:    
    int solve(int i,vector<pair<int,int>> &arr,vector<int> &dp)
    {
        if(i<0) return 0;

        if(dp[i]!=-1) return dp[i];

        int ans =  0;

        if(i-1>=0 && arr[i-1].first==arr[i].first-1)
        {
            ans = max(ans,arr[i].first*arr[i].second + solve(i-2,arr,dp));
        }

        else
        {
            ans = max(ans,arr[i].first*arr[i].second + solve(i-1,arr,dp));
        }

        ans = max(ans,solve(i-1,arr,dp));

        return dp[i] = ans;
    }

public:
    int deleteAndEarn(vector<int>& nums) {
        
        vector<pair<int,int>> vec;

        unordered_map<int,int> mpp;

        for(auto i:nums)
        {
            mpp[i]++;
        }

        for(auto i:mpp)
        {
            vec.push_back({i.first,i.second});
        }

        sort(vec.begin(),vec.end());

        int n = vec.size();

        vector<int> dp(vec.size()+1,-1);

        return solve(n-1,vec,dp);
    }
};

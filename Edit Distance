class Solution {
private:
    int solve(int i,int j,string &a,string &b,vector<vector<int>> &dp)
    {
        if(i==a.size())
        {
            return b.size()-j;
        }

        if(j==b.size())
        {
            return a.size()-i;
        }

        if(dp[i][j]!=-1) return dp[i][j];

        // int ans = 0;

        if(a[i]==b[j])
        {
            return solve(i+1,j+1,a,b,dp);
        }

        else
        {
            int ins = 1+solve(i,j+1,a,b,dp);

            int del = 1+solve(i+1,j,a,b,dp);

            int upd = 1+solve(i+1,j+1,a,b,dp);

            dp[i][j] = min(ins,min(del,upd));
        }

        return dp[i][j];
    }
public:
    int minDistance(string a, string b) {
        
        // vector<vector<int>> dp(a.size(),vector<int>(b.size()+1,-1));
        // return solve(0,0,a,b,dp);

        vector<vector<int>> dp(a.size()+1,vector<int>(b.size()+1));

        for(int j=0;j<b.size();j++)
        {
            dp[a.size()][j] = b.size()-j;
        }

        for(int i=0;i<a.size();i++)
        {
            dp[i][b.size()] = a.size()-i;
        }


        for(int i=a.size()-1;i>=0;i--)
        {
            for(int j=b.size()-1;j>=0;j--)
            {
                // int ans = 0;
                if(a[i]==b[j])
                {
                    dp[i][j] = dp[i+1][j+1];
                }

                else
                {
                    int ins = 1+dp[i][j+1];
                    int del = 1+dp[i+1][j];
                    int upd = 1+dp[i+1][j+1];

                    dp[i][j] = min(ins,min(del,upd));
                }

                // dp[i][j] = ans;
            }
        }

        return dp[0][0];
    }
};
